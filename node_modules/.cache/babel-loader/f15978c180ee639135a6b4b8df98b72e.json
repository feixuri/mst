{"ast":null,"code":"var _jsxFileName = \"/Users/zhuq/coin/uniswap/uniswap-interface/src/theme/index.tsx\";\nimport { transparentize } from 'polished';\nimport React, { useMemo } from 'react';\nimport styled, { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle, css } from 'styled-components';\nimport { useIsDarkMode } from '../state/user/hooks';\nimport { Text } from 'rebass';\nexport * from './components';\nconst MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n};\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce((accumulator, size) => {\n  ;\n\n  accumulator[size] = (a, b, c) => css`\n      @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n        ${css(a, b, c)}\n      }\n    `;\n\n  return accumulator;\n}, {});\nconst white = '#FFFFFF';\nconst black = '#000000';\nexport function colors(darkMode) {\n  return {\n    // base\n    white,\n    black,\n    grey100: '#f7f4f2',\n    grey200: '#f0e9e7',\n    grey300: '#e2d6cf',\n    grey400: '#aa9585',\n    grey500: '#805e49',\n    grey600: '#5b3926',\n    grey800: '#2d1e12',\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n    // backgrounds / greys\n    bg1: darkMode ? '#212429' : '#FFFFFF',\n    bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E' // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n\n  };\n}\nexport function theme(darkMode) {\n  return { ...colors(darkMode),\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  };\n}\nexport default function ThemeProvider({\n  children\n}) {\n  const darkMode = useIsDarkMode();\n  const themeObject = useMemo(() => theme(darkMode), [darkMode]);\n  return /*#__PURE__*/React.createElement(StyledComponentsThemeProvider, {\n    theme: themeObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }\n  }, children);\n}\nconst TextWrapper = styled(Text)`\n  color: ${({\n  color,\n  theme\n}) => theme[color]};\n`;\nexport const TYPE = {\n  main(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  link(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'primary1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  black(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  body(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 400,\n      fontSize: 16,\n      color: 'text1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  largeHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 600,\n      fontSize: 24\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  mediumHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      fontSize: 20\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  subHeader(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 400,\n      fontSize: 14\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  blue(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'primary1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  yellow(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'yellow1'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  darkGray(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'text3'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  gray(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: 'bg3'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  italic(props) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      fontSize: 12,\n      fontStyle: 'italic',\n      color: 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 12\n      }\n    }));\n  },\n\n  error({\n    error,\n    ...props\n  }) {\n    return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n      fontWeight: 500,\n      color: error ? 'red1' : 'text2'\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 12\n      }\n    }));\n  }\n\n};\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  letter-spacing: -0.018em;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n`;\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({\n  theme\n}) => theme.text1};\n  background-color: ${({\n  theme\n}) => theme.bg2};\n}\n\nbody {\n  min-height: 100vh;\n  background-position: 0 -30vh;\n  background-repeat: no-repeat;\n  background-image: ${({\n  theme\n}) => `radial-gradient(50% 50% at 50% 50%, ${transparentize(0.9, theme.primary1)} 0%, ${transparentize(1, theme.bg1)} 100%)`};\n}\n`;","map":{"version":3,"sources":["/Users/zhuq/coin/uniswap/uniswap-interface/src/theme/index.tsx"],"names":["transparentize","React","useMemo","styled","ThemeProvider","StyledComponentsThemeProvider","createGlobalStyle","css","useIsDarkMode","Text","MEDIA_WIDTHS","upToExtraSmall","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","Object","keys","reduce","accumulator","size","a","b","c","white","black","colors","darkMode","grey100","grey200","grey300","grey400","grey500","grey600","grey800","text1","text2","text3","text4","text5","bg1","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","red1","red2","green1","yellow1","yellow2","theme","grids","sm","md","lg","shadow1","mediaWidth","flexColumnNoWrap","flexRowNoWrap","children","themeObject","TextWrapper","color","TYPE","main","props","link","body","largeHeader","mediumHeader","subHeader","blue","yellow","darkGray","gray","italic","error","FixedGlobalStyle","ThemedGlobalStyle"],"mappings":"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","sourcesContent":["import { transparentize } from 'polished'\nimport React, { useMemo } from 'react'\nimport styled, {\n  ThemeProvider as StyledComponentsThemeProvider,\n  createGlobalStyle,\n  css,\n  DefaultTheme\n} from 'styled-components'\nimport { useIsDarkMode } from '../state/user/hooks'\nimport { Text, TextProps } from 'rebass'\nimport { Colors } from './styled'\n\nexport * from './components'\n\nconst MEDIA_WIDTHS = {\n  upToExtraSmall: 500,\n  upToSmall: 600,\n  upToMedium: 960,\n  upToLarge: 1280\n}\n\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\n  (accumulator, size) => {\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\n        ${css(a, b, c)}\n      }\n    `\n    return accumulator\n  },\n  {}\n) as any\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport function colors(darkMode: boolean): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    grey100: '#f7f4f2',\n    grey200: '#f0e9e7',\n    grey300: '#e2d6cf',\n    grey400: '#aa9585',\n    grey500: '#805e49',\n    grey600: '#5b3926',\n    grey800: '#2d1e12',\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n    // backgrounds / greys\n    bg1: darkMode ? '#212429' : '#FFFFFF',\n    bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E'\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  }\n}\n\n\nexport function theme(darkMode: boolean): DefaultTheme {\n  return {\n    ...colors(darkMode),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const darkMode = useIsDarkMode()\n\n  const themeObject = useMemo(() => theme(darkMode), [darkMode])\n\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\n}\n\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\n  color: ${({ color, theme }) => (theme as any)[color]};\n`\n\nexport const TYPE = {\n  main(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text2'} {...props} />\n  },\n  link(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\n  },\n  black(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\n  },\n  body(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={16} color={'text1'} {...props} />\n  },\n  largeHeader(props: TextProps) {\n    return <TextWrapper fontWeight={600} fontSize={24} {...props} />\n  },\n  mediumHeader(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={20} {...props} />\n  },\n  subHeader(props: TextProps) {\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\n  },\n  blue(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\n  },\n  yellow(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'yellow1'} {...props} />\n  },\n  darkGray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'text3'} {...props} />\n  },\n  gray(props: TextProps) {\n    return <TextWrapper fontWeight={500} color={'bg3'} {...props} />\n  },\n  italic(props: TextProps) {\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color={'text2'} {...props} />\n  },\n  error({ error, ...props }: { error: boolean } & TextProps) {\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\n  }\n}\n\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  letter-spacing: -0.018em;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n`\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg2};\n}\n\nbody {\n  min-height: 100vh;\n  background-position: 0 -30vh;\n  background-repeat: no-repeat;\n  background-image: ${({ theme }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${transparentize(0.9, theme.primary1)} 0%, ${transparentize(\n      1,\n      theme.bg1\n    )} 100%)`};\n}\n`\n"]},"metadata":{},"sourceType":"module"}