{"ast":null,"code":"var _jsxFileName = \"/Users/zhuq/coin/uniswap/uniswap-interface/src/pages/Home/components/Balances.tsx\";\n// import BigNumber from 'bignumber.js'\n// import { BigNumber } from '@ethersproject/bignumber'\n// import React, { useEffect, useState } from 'react'\nimport React from 'react'; // import CountUp from 'react-countup'\n\nimport styled from 'styled-components'; // import { useWallet } from 'use-wallet'\n\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport Label from '../../../components/Label';\nimport Spacer from '../../../components/Spacer';\nimport Value from '../../../components/Value'; // import SushiIcon from '../../../components/SushiIcon'\n// import useAllEarnings from '../../../hooks/useAllEarnings'\n// import useAllStakedValue from '../../../hooks/useAllStakedValue'\n// import useFarms from '../../../hooks/useFarms'\n// import useTokenBalance from '../../../hooks/useTokenBalance'\n// import useSushi from '../../../hooks/useSushi'\n// import { getSushiAddress, getSushiSupply } from '../../../sushi/utils'\n// import { getBalanceNumber } from '../../../utils/formatBalance'\n// const PendingRewards: React.FC = () => {\n//   const [start, setStart] = useState(0)\n//   const [end, setEnd] = useState(0)\n//   const [scale, setScale] = useState(1)\n//\n//   const allEarnings = useAllEarnings()\n//   let sumEarning = 0\n//   for (let earning of allEarnings) {\n//     sumEarning += new BigNumber(earning)\n//       .div(new BigNumber(10).pow(18))\n//       .toNumber()\n//   }\n//\n//   const [farms] = useFarms()\n//   const allStakedValue = useAllStakedValue()\n//\n//   if (allStakedValue && allStakedValue.length) {\n//     const sumWeth = farms.reduce(\n//       (c, { id }, i) => c + (allStakedValue[i].totalWethValue.toNumber() || 0),\n//       0,\n//     )\n//   }\n//\n//   useEffect(() => {\n//     setStart(end)\n//     setEnd(sumEarning)\n//   }, [sumEarning])\n//\n//   return (\n//     <span\n//       style={{\n//         transform: `scale(${scale})`,\n//         transformOrigin: 'right bottom',\n//         transition: 'transform 0.5s',\n//         display: 'inline-block',\n//       }}\n//     >\n//       <CountUp\n//         start={start}\n//         end={end}\n//         decimals={end < 0 ? 4 : end > 1e5 ? 0 : 3}\n//         duration={1}\n//         onStart={() => {\n//           setScale(1.25)\n//           setTimeout(() => setScale(1), 600)\n//         }}\n//         separator=\",\"\n//       />\n//     </span>\n//   )\n// }\n\nconst Balances = () => {\n  // const [totalSupply, setTotalSupply] = useState<BigNumber>()\n  // const sushi = useSushi()\n  // const sushiBalance = useTokenBalance(getSushiAddress(sushi))\n  // const { account, ethereum }: { account: any; ethereum: any } = useWallet()\n  //\n  // useEffect(() => {\n  //   async function fetchTotalSupply() {\n  //     const supply = await getSushiSupply(sushi)\n  //     setTotalSupply(supply)\n  //   }\n  //   if (sushi) {\n  //     fetchTotalSupply()\n  //   }\n  // }, [sushi, setTotalSupply])\n  return /*#__PURE__*/React.createElement(StyledWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledBalances, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledBalance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    text: \"Your MST Balance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Value, {\n    value: 'Locked',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Footnote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Pending harvest\", /*#__PURE__*/React.createElement(FootnoteValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Spacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    text: \"Total SUSHI Supply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Value, {\n    value: 'Locked',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footnote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"New rewards per block\", /*#__PURE__*/React.createElement(FootnoteValue, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"1,000 SUSHI\"))));\n};\n\nconst Footnote = styled.div`\n  font-size: 14px;\n  padding: 8px 20px;\n  // color: ${props => props.theme.color.grey[400]};\n  color: ${({\n  theme\n}) => theme.grey400};\n  border-top: solid 1px ${({\n  theme\n}) => theme.grey300};\n`;\nconst FootnoteValue = styled.div`\n  font-family: 'Roboto Mono', monospace;\n  float: right;\n`;\nconst StyledWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: stretch;\n  }\n`;\nconst StyledBalances = styled.div`\n  display: flex;\n`;\nconst StyledBalance = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`;\nexport default Balances;","map":{"version":3,"sources":["/Users/zhuq/coin/uniswap/uniswap-interface/src/pages/Home/components/Balances.tsx"],"names":["React","styled","Card","CardContent","Label","Spacer","Value","Balances","flex","Footnote","div","props","theme","color","grey","grey400","grey300","FootnoteValue","StyledWrapper","StyledBalances","StyledBalance"],"mappings":"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","sourcesContent":["// import BigNumber from 'bignumber.js'\n// import { BigNumber } from '@ethersproject/bignumber'\n// import React, { useEffect, useState } from 'react'\nimport React from 'react'\n// import CountUp from 'react-countup'\nimport styled from 'styled-components'\n// import { useWallet } from 'use-wallet'\nimport Card from '../../../components/Card'\nimport CardContent from '../../../components/CardContent'\nimport Label from '../../../components/Label'\nimport Spacer from '../../../components/Spacer'\nimport Value from '../../../components/Value'\n// import SushiIcon from '../../../components/SushiIcon'\n// import useAllEarnings from '../../../hooks/useAllEarnings'\n// import useAllStakedValue from '../../../hooks/useAllStakedValue'\n// import useFarms from '../../../hooks/useFarms'\n// import useTokenBalance from '../../../hooks/useTokenBalance'\n// import useSushi from '../../../hooks/useSushi'\n// import { getSushiAddress, getSushiSupply } from '../../../sushi/utils'\n// import { getBalanceNumber } from '../../../utils/formatBalance'\n\n// const PendingRewards: React.FC = () => {\n//   const [start, setStart] = useState(0)\n//   const [end, setEnd] = useState(0)\n//   const [scale, setScale] = useState(1)\n//\n//   const allEarnings = useAllEarnings()\n//   let sumEarning = 0\n//   for (let earning of allEarnings) {\n//     sumEarning += new BigNumber(earning)\n//       .div(new BigNumber(10).pow(18))\n//       .toNumber()\n//   }\n//\n//   const [farms] = useFarms()\n//   const allStakedValue = useAllStakedValue()\n//\n//   if (allStakedValue && allStakedValue.length) {\n//     const sumWeth = farms.reduce(\n//       (c, { id }, i) => c + (allStakedValue[i].totalWethValue.toNumber() || 0),\n//       0,\n//     )\n//   }\n//\n//   useEffect(() => {\n//     setStart(end)\n//     setEnd(sumEarning)\n//   }, [sumEarning])\n//\n//   return (\n//     <span\n//       style={{\n//         transform: `scale(${scale})`,\n//         transformOrigin: 'right bottom',\n//         transition: 'transform 0.5s',\n//         display: 'inline-block',\n//       }}\n//     >\n//       <CountUp\n//         start={start}\n//         end={end}\n//         decimals={end < 0 ? 4 : end > 1e5 ? 0 : 3}\n//         duration={1}\n//         onStart={() => {\n//           setScale(1.25)\n//           setTimeout(() => setScale(1), 600)\n//         }}\n//         separator=\",\"\n//       />\n//     </span>\n//   )\n// }\n\nconst Balances: React.FC = () => {\n  // const [totalSupply, setTotalSupply] = useState<BigNumber>()\n  // const sushi = useSushi()\n  // const sushiBalance = useTokenBalance(getSushiAddress(sushi))\n  // const { account, ethereum }: { account: any; ethereum: any } = useWallet()\n  //\n  // useEffect(() => {\n  //   async function fetchTotalSupply() {\n  //     const supply = await getSushiSupply(sushi)\n  //     setTotalSupply(supply)\n  //   }\n  //   if (sushi) {\n  //     fetchTotalSupply()\n  //   }\n  // }, [sushi, setTotalSupply])\n\n  return (\n    <StyledWrapper>\n      <Spacer />\n      <Card>\n        <CardContent>\n          <StyledBalances>\n            <StyledBalance>\n              {/*<SushiIcon />*/}\n              <Spacer />\n              <div style={{ flex: 1 }}>\n                <Label text=\"Your MST Balance\" />\n                {/*<Value*/}\n                {/*  value={!!account ? getBalanceNumber(sushiBalance) : 'Locked'}*/}\n                {/*/>*/}\n                <Value value={'Locked'} />\n              </div>\n            </StyledBalance>\n          </StyledBalances>\n        </CardContent>\n        <Footnote>\n          Pending harvest\n          <FootnoteValue>\n            {/*<PendingRewards /> SUSHI*/}\n          </FootnoteValue>\n        </Footnote>\n      </Card>\n      <Spacer />\n\n      <Card>\n        <CardContent>\n          <Label text=\"Total SUSHI Supply\" />\n          {/*<Value*/}\n          {/*  value={totalSupply ? getBalanceNumber(totalSupply) : 'Locked'}*/}\n          {/*/>*/}\n          <Value value={'Locked'} />\n        </CardContent>\n        <Footnote>\n          New rewards per block\n          <FootnoteValue>1,000 SUSHI</FootnoteValue>\n        </Footnote>\n      </Card>\n    </StyledWrapper>\n  )\n}\n\nconst Footnote = styled.div`\n  font-size: 14px;\n  padding: 8px 20px;\n  // color: ${props => props.theme.color.grey[400]};\n  color: ${({ theme }) => theme.grey400};\n  border-top: solid 1px ${({ theme }) => theme.grey300};\n`\nconst FootnoteValue = styled.div`\n  font-family: 'Roboto Mono', monospace;\n  float: right;\n`\n\nconst StyledWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: stretch;\n  }\n`\n\nconst StyledBalances = styled.div`\n  display: flex;\n`\n\nconst StyledBalance = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nexport default Balances\n"]},"metadata":{},"sourceType":"module"}